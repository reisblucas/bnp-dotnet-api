// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend_challenge.context;

#nullable disable

namespace backend_challenge.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230927154207_v2")]
    partial class v2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("HeroSuperpower", b =>
                {
                    b.Property<Guid>("Heroesid")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Superpowersid")
                        .HasColumnType("TEXT");

                    b.HasKey("Heroesid", "Superpowersid");

                    b.HasIndex("Superpowersid");

                    b.ToTable("HeroSuperpowers", (string)null);
                });

            modelBuilder.Entity("backend_challenge.Modules.hero.repository.Hero", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("image")
                        .HasColumnType("TEXT");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Heroes");
                });

            modelBuilder.Entity("backend_challenge.Modules.superpower.repository.Superpower", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("SuperPowers");

                    b.HasData(
                        new
                        {
                            id = new Guid("d1e1f4ce-6e44-4628-804a-49b0ae4a0cab"),
                            name = "Super Strength"
                        },
                        new
                        {
                            id = new Guid("66786146-6e06-43dd-a4f4-e6977d7d9649"),
                            name = "Super Speed"
                        },
                        new
                        {
                            id = new Guid("81ca26ce-ae53-4c99-b1c6-2acfe9ba6ad4"),
                            name = "Flight"
                        },
                        new
                        {
                            id = new Guid("5813bdb2-cfc7-4a34-8785-baf28ee5dda4"),
                            name = "Teleportation"
                        },
                        new
                        {
                            id = new Guid("ed2245c5-c512-4502-8ea9-f882c40de755"),
                            name = "Telekinesis"
                        },
                        new
                        {
                            id = new Guid("e9a950dc-e5e6-4785-92e8-b6956ed0ceea"),
                            name = "Mind Control"
                        },
                        new
                        {
                            id = new Guid("f7760e9f-b5e6-4d28-b7fe-444612ed4e32"),
                            name = "Invisibility"
                        },
                        new
                        {
                            id = new Guid("37e65689-3a35-4634-8496-2f7acdee0d30"),
                            name = "Healing"
                        });
                });

            modelBuilder.Entity("backend_challenge.Modules.uniformColor.repository.UniformColor", b =>
                {
                    b.Property<Guid>("id")
                        .HasColumnType("TEXT");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("UniformColors");

                    b.HasData(
                        new
                        {
                            id = new Guid("8e94e220-1f1a-4ca0-bfcf-5ede21b91a8d"),
                            name = "Red"
                        },
                        new
                        {
                            id = new Guid("b228db8d-eaa4-4b2b-beb8-ee85469d5dac"),
                            name = "Blue"
                        },
                        new
                        {
                            id = new Guid("76445352-1fb3-4e13-9f2d-7603923eb455"),
                            name = "Green"
                        },
                        new
                        {
                            id = new Guid("e22c9702-7652-47be-ba98-8ca34de974e2"),
                            name = "Yellow"
                        },
                        new
                        {
                            id = new Guid("ad0ffdf5-05cb-40dd-bc76-8748b5013bec"),
                            name = "Orange"
                        },
                        new
                        {
                            id = new Guid("02688205-3e7f-4db4-9c0e-1bd7292c185e"),
                            name = "Purple"
                        },
                        new
                        {
                            id = new Guid("2fed141a-955a-4f9a-ad6c-4a11d7e1164d"),
                            name = "Black"
                        },
                        new
                        {
                            id = new Guid("d98c10d3-4de1-41c8-8cb1-b537127e5dea"),
                            name = "White"
                        });
                });

            modelBuilder.Entity("HeroSuperpower", b =>
                {
                    b.HasOne("backend_challenge.Modules.hero.repository.Hero", null)
                        .WithMany()
                        .HasForeignKey("Heroesid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend_challenge.Modules.superpower.repository.Superpower", null)
                        .WithMany()
                        .HasForeignKey("Superpowersid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("backend_challenge.Modules.uniformColor.repository.UniformColor", b =>
                {
                    b.HasOne("backend_challenge.Modules.hero.repository.Hero", "Hero")
                        .WithOne("UniformColor")
                        .HasForeignKey("backend_challenge.Modules.uniformColor.repository.UniformColor", "id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hero");
                });

            modelBuilder.Entity("backend_challenge.Modules.hero.repository.Hero", b =>
                {
                    b.Navigation("UniformColor")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
